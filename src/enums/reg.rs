use num_traits::FromPrimitive;
use xed_sys2::xed_interface::*;

#[derive(Copy, Clone, Debug, Eq, PartialEq, Hash, Primitive)]
pub enum Reg {
    Invalid = XED_REG_INVALID as isize,
    BndCfgU = XED_REG_BNDCFGU as isize,
    BndStatus = XED_REG_BNDSTATUS as isize,
    Bnd0 = XED_REG_BND0 as isize,
    Bnd1 = XED_REG_BND1 as isize,
    Bnd2 = XED_REG_BND2 as isize,
    Bnd3 = XED_REG_BND3 as isize,
    Cr0 = XED_REG_CR0 as isize,
    Cr1 = XED_REG_CR1 as isize,
    Cr2 = XED_REG_CR2 as isize,
    Cr3 = XED_REG_CR3 as isize,
    Cr4 = XED_REG_CR4 as isize,
    Cr5 = XED_REG_CR5 as isize,
    Cr6 = XED_REG_CR6 as isize,
    Cr7 = XED_REG_CR7 as isize,
    Cr8 = XED_REG_CR8 as isize,
    Cr9 = XED_REG_CR9 as isize,
    Cr10 = XED_REG_CR10 as isize,
    Cr11 = XED_REG_CR11 as isize,
    Cr12 = XED_REG_CR12 as isize,
    Cr13 = XED_REG_CR13 as isize,
    Cr14 = XED_REG_CR14 as isize,
    Cr15 = XED_REG_CR15 as isize,
    Dr0 = XED_REG_DR0 as isize,
    Dr1 = XED_REG_DR1 as isize,
    Dr2 = XED_REG_DR2 as isize,
    Dr3 = XED_REG_DR3 as isize,
    Dr4 = XED_REG_DR4 as isize,
    Dr5 = XED_REG_DR5 as isize,
    Dr6 = XED_REG_DR6 as isize,
    Dr7 = XED_REG_DR7 as isize,
    Flags = XED_REG_FLAGS as isize,
    EFlags = XED_REG_EFLAGS as isize,
    RFlags = XED_REG_RFLAGS as isize,
    Ax = XED_REG_AX as isize,
    Cx = XED_REG_CX as isize,
    Dx = XED_REG_DX as isize,
    Bx = XED_REG_BX as isize,
    Sp = XED_REG_SP as isize,
    Bp = XED_REG_BP as isize,
    Si = XED_REG_SI as isize,
    Di = XED_REG_DI as isize,
    R8W = XED_REG_R8W as isize,
    R9W = XED_REG_R9W as isize,
    R10W = XED_REG_R10W as isize,
    R11W = XED_REG_R11W as isize,
    R12W = XED_REG_R12W as isize,
    R13W = XED_REG_R13W as isize,
    R14W = XED_REG_R14W as isize,
    R15W = XED_REG_R15W as isize,
    Eax = XED_REG_EAX as isize,
    Ecx = XED_REG_ECX as isize,
    Edx = XED_REG_EDX as isize,
    Ebx = XED_REG_EBX as isize,
    Esp = XED_REG_ESP as isize,
    Ebp = XED_REG_EBP as isize,
    Esi = XED_REG_ESI as isize,
    Edi = XED_REG_EDI as isize,
    R8D = XED_REG_R8D as isize,
    R9D = XED_REG_R9D as isize,
    R10D = XED_REG_R10D as isize,
    R11D = XED_REG_R11D as isize,
    R12D = XED_REG_R12D as isize,
    R13D = XED_REG_R13D as isize,
    R14D = XED_REG_R14D as isize,
    R15D = XED_REG_R15D as isize,
    Rax = XED_REG_RAX as isize,
    Rcx = XED_REG_RCX as isize,
    Rdx = XED_REG_RDX as isize,
    Rbx = XED_REG_RBX as isize,
    Rsp = XED_REG_RSP as isize,
    Rbp = XED_REG_RBP as isize,
    Rsi = XED_REG_RSI as isize,
    Rdi = XED_REG_RDI as isize,
    R8 = XED_REG_R8 as isize,
    R9 = XED_REG_R9 as isize,
    R10 = XED_REG_R10 as isize,
    R11 = XED_REG_R11 as isize,
    R12 = XED_REG_R12 as isize,
    R13 = XED_REG_R13 as isize,
    R14 = XED_REG_R14 as isize,
    R15 = XED_REG_R15 as isize,
    Al = XED_REG_AL as isize,
    Cl = XED_REG_CL as isize,
    Dl = XED_REG_DL as isize,
    Bl = XED_REG_BL as isize,
    Spl = XED_REG_SPL as isize,
    Bpl = XED_REG_BPL as isize,
    Sil = XED_REG_SIL as isize,
    Dil = XED_REG_DIL as isize,
    R8B = XED_REG_R8B as isize,
    R9B = XED_REG_R9B as isize,
    R10B = XED_REG_R10B as isize,
    R11B = XED_REG_R11B as isize,
    R12B = XED_REG_R12B as isize,
    R13B = XED_REG_R13B as isize,
    R14B = XED_REG_R14B as isize,
    R15B = XED_REG_R15B as isize,
    Ah = XED_REG_AH as isize,
    Ch = XED_REG_CH as isize,
    Dh = XED_REG_DH as isize,
    Bh = XED_REG_BH as isize,
    Error = XED_REG_ERROR as isize,
    Rip = XED_REG_RIP as isize,
    Eip = XED_REG_EIP as isize,
    Ip = XED_REG_IP as isize,
    K0 = XED_REG_K0 as isize,
    K1 = XED_REG_K1 as isize,
    K2 = XED_REG_K2 as isize,
    K3 = XED_REG_K3 as isize,
    K4 = XED_REG_K4 as isize,
    K5 = XED_REG_K5 as isize,
    K6 = XED_REG_K6 as isize,
    K7 = XED_REG_K7 as isize,
    Mmx0 = XED_REG_MMX0 as isize,
    Mmx1 = XED_REG_MMX1 as isize,
    Mmx2 = XED_REG_MMX2 as isize,
    Mmx3 = XED_REG_MMX3 as isize,
    Mmx4 = XED_REG_MMX4 as isize,
    Mmx5 = XED_REG_MMX5 as isize,
    Mmx6 = XED_REG_MMX6 as isize,
    Mmx7 = XED_REG_MMX7 as isize,
    Ssp = XED_REG_SSP as isize,
    IA32UCet = XED_REG_IA32_U_CET as isize,
    Mxcsr = XED_REG_MXCSR as isize,
    StackPush = XED_REG_STACKPUSH as isize,
    StackPop = XED_REG_STACKPOP as isize,
    GdTr = XED_REG_GDTR as isize,
    LdTr = XED_REG_LDTR as isize,
    IdTr = XED_REG_IDTR as isize,
    Tr = XED_REG_TR as isize,
    Tsc = XED_REG_TSC as isize,
    TscAux = XED_REG_TSCAUX as isize,
    MsRs = XED_REG_MSRS as isize,
    FsBase = XED_REG_FSBASE as isize,
    GsBase = XED_REG_GSBASE as isize,
    X87Control = XED_REG_X87CONTROL as isize,
    X87Status = XED_REG_X87STATUS as isize,
    X87Tag = XED_REG_X87TAG as isize,
    X87Push = XED_REG_X87PUSH as isize,
    X87Pop = XED_REG_X87POP as isize,
    X87Pop2 = XED_REG_X87POP2 as isize,
    X87Opcode = XED_REG_X87OPCODE as isize,
    X87LastCs = XED_REG_X87LASTCS as isize,
    X87LastIp = XED_REG_X87LASTIP as isize,
    X87LastDs = XED_REG_X87LASTDS as isize,
    X87LastDp = XED_REG_X87LASTDP as isize,
    Cs = XED_REG_CS as isize,
    Ds = XED_REG_DS as isize,
    Es = XED_REG_ES as isize,
    Ss = XED_REG_SS as isize,
    Fs = XED_REG_FS as isize,
    Gs = XED_REG_GS as isize,
    Tmp0 = XED_REG_TMP0 as isize,
    Tmp1 = XED_REG_TMP1 as isize,
    Tmp2 = XED_REG_TMP2 as isize,
    Tmp3 = XED_REG_TMP3 as isize,
    Tmp4 = XED_REG_TMP4 as isize,
    Tmp5 = XED_REG_TMP5 as isize,
    Tmp6 = XED_REG_TMP6 as isize,
    Tmp7 = XED_REG_TMP7 as isize,
    Tmp8 = XED_REG_TMP8 as isize,
    Tmp9 = XED_REG_TMP9 as isize,
    Tmp10 = XED_REG_TMP10 as isize,
    Tmp11 = XED_REG_TMP11 as isize,
    Tmp12 = XED_REG_TMP12 as isize,
    Tmp13 = XED_REG_TMP13 as isize,
    Tmp14 = XED_REG_TMP14 as isize,
    Tmp15 = XED_REG_TMP15 as isize,
    St0 = XED_REG_ST0 as isize,
    St1 = XED_REG_ST1 as isize,
    St2 = XED_REG_ST2 as isize,
    St3 = XED_REG_ST3 as isize,
    St4 = XED_REG_ST4 as isize,
    St5 = XED_REG_ST5 as isize,
    St6 = XED_REG_ST6 as isize,
    St7 = XED_REG_ST7 as isize,
    Xcr0 = XED_REG_XCR0 as isize,
    Xmm0 = XED_REG_XMM0 as isize,
    Xmm1 = XED_REG_XMM1 as isize,
    Xmm2 = XED_REG_XMM2 as isize,
    Xmm3 = XED_REG_XMM3 as isize,
    Xmm4 = XED_REG_XMM4 as isize,
    Xmm5 = XED_REG_XMM5 as isize,
    Xmm6 = XED_REG_XMM6 as isize,
    Xmm7 = XED_REG_XMM7 as isize,
    Xmm8 = XED_REG_XMM8 as isize,
    Xmm9 = XED_REG_XMM9 as isize,
    Xmm10 = XED_REG_XMM10 as isize,
    Xmm11 = XED_REG_XMM11 as isize,
    Xmm12 = XED_REG_XMM12 as isize,
    Xmm13 = XED_REG_XMM13 as isize,
    Xmm14 = XED_REG_XMM14 as isize,
    Xmm15 = XED_REG_XMM15 as isize,
    Xmm16 = XED_REG_XMM16 as isize,
    Xmm17 = XED_REG_XMM17 as isize,
    Xmm18 = XED_REG_XMM18 as isize,
    Xmm19 = XED_REG_XMM19 as isize,
    Xmm20 = XED_REG_XMM20 as isize,
    Xmm21 = XED_REG_XMM21 as isize,
    Xmm22 = XED_REG_XMM22 as isize,
    Xmm23 = XED_REG_XMM23 as isize,
    Xmm24 = XED_REG_XMM24 as isize,
    Xmm25 = XED_REG_XMM25 as isize,
    Xmm26 = XED_REG_XMM26 as isize,
    Xmm27 = XED_REG_XMM27 as isize,
    Xmm28 = XED_REG_XMM28 as isize,
    Xmm29 = XED_REG_XMM29 as isize,
    Xmm30 = XED_REG_XMM30 as isize,
    Xmm31 = XED_REG_XMM31 as isize,
    Ymm0 = XED_REG_YMM0 as isize,
    Ymm1 = XED_REG_YMM1 as isize,
    Ymm2 = XED_REG_YMM2 as isize,
    Ymm3 = XED_REG_YMM3 as isize,
    Ymm4 = XED_REG_YMM4 as isize,
    Ymm5 = XED_REG_YMM5 as isize,
    Ymm6 = XED_REG_YMM6 as isize,
    Ymm7 = XED_REG_YMM7 as isize,
    Ymm8 = XED_REG_YMM8 as isize,
    Ymm9 = XED_REG_YMM9 as isize,
    Ymm10 = XED_REG_YMM10 as isize,
    Ymm11 = XED_REG_YMM11 as isize,
    Ymm12 = XED_REG_YMM12 as isize,
    Ymm13 = XED_REG_YMM13 as isize,
    Ymm14 = XED_REG_YMM14 as isize,
    Ymm15 = XED_REG_YMM15 as isize,
    Ymm16 = XED_REG_YMM16 as isize,
    Ymm17 = XED_REG_YMM17 as isize,
    Ymm18 = XED_REG_YMM18 as isize,
    Ymm19 = XED_REG_YMM19 as isize,
    Ymm20 = XED_REG_YMM20 as isize,
    Ymm21 = XED_REG_YMM21 as isize,
    Ymm22 = XED_REG_YMM22 as isize,
    Ymm23 = XED_REG_YMM23 as isize,
    Ymm24 = XED_REG_YMM24 as isize,
    Ymm25 = XED_REG_YMM25 as isize,
    Ymm26 = XED_REG_YMM26 as isize,
    Ymm27 = XED_REG_YMM27 as isize,
    Ymm28 = XED_REG_YMM28 as isize,
    Ymm29 = XED_REG_YMM29 as isize,
    Ymm30 = XED_REG_YMM30 as isize,
    Ymm31 = XED_REG_YMM31 as isize,
    Zmm0 = XED_REG_ZMM0 as isize,
    Zmm1 = XED_REG_ZMM1 as isize,
    Zmm2 = XED_REG_ZMM2 as isize,
    Zmm3 = XED_REG_ZMM3 as isize,
    Zmm4 = XED_REG_ZMM4 as isize,
    Zmm5 = XED_REG_ZMM5 as isize,
    Zmm6 = XED_REG_ZMM6 as isize,
    Zmm7 = XED_REG_ZMM7 as isize,
    Zmm8 = XED_REG_ZMM8 as isize,
    Zmm9 = XED_REG_ZMM9 as isize,
    Zmm10 = XED_REG_ZMM10 as isize,
    Zmm11 = XED_REG_ZMM11 as isize,
    Zmm12 = XED_REG_ZMM12 as isize,
    Zmm13 = XED_REG_ZMM13 as isize,
    Zmm14 = XED_REG_ZMM14 as isize,
    Zmm15 = XED_REG_ZMM15 as isize,
    Zmm16 = XED_REG_ZMM16 as isize,
    Zmm17 = XED_REG_ZMM17 as isize,
    Zmm18 = XED_REG_ZMM18 as isize,
    Zmm19 = XED_REG_ZMM19 as isize,
    Zmm20 = XED_REG_ZMM20 as isize,
    Zmm21 = XED_REG_ZMM21 as isize,
    Zmm22 = XED_REG_ZMM22 as isize,
    Zmm23 = XED_REG_ZMM23 as isize,
    Zmm24 = XED_REG_ZMM24 as isize,
    Zmm25 = XED_REG_ZMM25 as isize,
    Zmm26 = XED_REG_ZMM26 as isize,
    Zmm27 = XED_REG_ZMM27 as isize,
    Zmm28 = XED_REG_ZMM28 as isize,
    Zmm29 = XED_REG_ZMM29 as isize,
    Zmm30 = XED_REG_ZMM30 as isize,
    Zmm31 = XED_REG_ZMM31 as isize,
}

impl From<xed_reg_enum_t> for Reg {
    fn from(x: xed_reg_enum_t) -> Self {
        Self::from_u32(x).unwrap_or(Reg::Invalid)
    }
}

impl From<Reg> for xed_reg_enum_t {
    fn from(x: Reg) -> Self {
        x as Self
    }
}
